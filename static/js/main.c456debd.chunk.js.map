{"version":3,"sources":["connector/index.js","constant/index.js","components/CounterGet.js","components/CounterInc.js","components/CounterDec.js","App.js","library/index.js","index.js"],"names":["injectedConnector","InjectedConnector","supportedChainIds","COUNTER_ABI","COUNTER_ADDRESS","CountGet","useState","count","setCount","library","useWeb3React","onClick","ethers","Contract","get","then","result","toNumber","CounterInc","account","signer","getSigner","connectUnchecked","inc","console","log","CounterDec","dec","App","chainId","activate","active","style","color","getLibrary","provider","Web3Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEaA,EAAoB,I,MAAIC,GAAkB,CACnDC,kBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,M,gBCHnBC,EAAc,CACvB,4CACA,wBACA,yBAGSC,EAAkB,6CCwBhBC,MAzBf,WACI,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACOC,EAAWC,cAAXD,QAWP,OACI,gCACI,wBAAQE,QAZhB,WAC4B,IAAIC,IAAOC,SAC/BT,EACAD,EACAM,GAEYK,MAAMC,MAAK,SAACC,GACxBR,EAASQ,EAAOC,gBAKhB,uBAGA,8BACKV,QCJFW,MAhBf,WACI,MAA2BR,cAApBD,EAAP,EAAOA,QAASU,EAAhB,EAAgBA,QAahB,OAAO,wBAAQR,QAXH,WACR,IAAMS,EAAM,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAASY,UAAUF,GAASG,mBACnB,IAAIV,IAAOC,SAC/BT,EACAD,EACAiB,GAEYG,MAAMR,MAAK,SAACC,GACxBQ,QAAQC,IAAIT,OAGb,kBCEIU,MAhBf,WACI,MAA2BhB,cAApBD,EAAP,EAAOA,QAASU,EAAhB,EAAgBA,QAahB,OAAO,wBAAQR,QAXH,WACR,IAAMS,EAAM,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAASY,UAAUF,GAASG,mBACnB,IAAIV,IAAOC,SAC/BT,EACAD,EACAiB,GAEYO,MAAMZ,MAAK,SAACC,GACxBQ,QAAQC,IAAIT,OAGb,kBCYIY,MAvBf,WACE,MAA6ClB,cAAtCmB,EAAP,EAAOA,QAASV,EAAhB,EAAgBA,QAASW,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,OAKnC,OACE,gCACE,6CAAgBF,KAChB,4CAAeV,KACdY,EACC,qBAAKC,MAAO,CAACC,MAAO,SAApB,wBAEA,wBAAQtB,QAXE,WACdmB,EAAS9B,IAUL,qBAEF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCjBSkC,MALf,SAAoBC,GAEhB,OADgB,IAAIC,IAAaD,ICGrCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAmBL,WAAcA,EAAjC,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U","file":"static/js/main.c456debd.chunk.js","sourcesContent":["import {InjectedConnector} from \"@web3-react/injected-connector\";\r\n\r\nexport const injectedConnector = new InjectedConnector({\r\n    supportedChainIds: [1,3,4,5,42]\r\n});","export const COUNTER_ABI = [\r\n    \"function get() public view returns (uint)\",\r\n    \"function inc() public\",\r\n    \"function dec() public\",\r\n];\r\n\r\nexport const COUNTER_ADDRESS = \"0x7B8BE84B7158F2a57B6beCedC38ef4Cb7162651a\";","import {useWeb3React} from \"@web3-react/core\";\r\nimport {useState} from \"react\";\r\nimport {ethers} from \"ethers\";\r\nimport {COUNTER_ABI, COUNTER_ADDRESS} from \"../constant\";\r\n\r\nfunction CountGet() {\r\n    const [count, setCount] = useState(0);\r\n    const {library} = useWeb3React();\r\n    function get(){\r\n        const counterContract = new ethers.Contract(\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            library\r\n        ); // contract 객체 생성, cryptozombie chapter 6, can use methods in contract as if it is a class\r\n        counterContract.get().then((result) => {\r\n            setCount(result.toNumber());\r\n        });\r\n    };\r\n    return(\r\n        <div>\r\n            <button onClick={get}>\r\n                Get Count\r\n            </button>\r\n            <div>\r\n                {count}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountGet;","import {useWeb3React} from \"@web3-react/core\";\r\nimport {ethers} from \"ethers\";\r\nimport {COUNTER_ABI,COUNTER_ADDRESS} from \"../constant\";\r\n\r\nfunction CounterInc(){\r\n    const {library, account} = useWeb3React();\r\n\r\n    const inc = () => {\r\n        const signer = library?.getSigner(account).connectUnchecked();\r\n        const counterContract = new ethers.Contract(\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            signer\r\n        );\r\n        counterContract.inc().then((result) => {\r\n            console.log(result);\r\n        });\r\n    };\r\n    return <button onClick={inc}>Inc</button>\r\n}\r\nexport default CounterInc;","import {useWeb3React} from \"@web3-react/core\";\r\nimport {ethers} from \"ethers\";\r\nimport {COUNTER_ABI,COUNTER_ADDRESS} from \"../constant\";\r\n\r\nfunction CounterDec(){\r\n    const {library, account} = useWeb3React();\r\n\r\n    const dec = () => {\r\n        const signer = library?.getSigner(account).connectUnchecked();\r\n        const counterContract = new ethers.Contract(\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            signer\r\n        );\r\n        counterContract.dec().then((result) => {\r\n            console.log(result);\r\n        });\r\n    };\r\n    return <button onClick={dec}>Dec</button>\r\n}\r\nexport default CounterDec;","import {ColoredButton, ConnectButton} from \"./components/Button.js\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { injectedConnector } from \"./connector/index.js\";\nimport CountGet from \"./components/CounterGet.js\";\nimport CounterInc from \"./components/CounterInc.js\";\nimport CounterDec from \"./components/CounterDec.js\";\n\nfunction App() {\n  const {chainId, account, activate, active} = useWeb3React();  //like useState, get info from metamask user\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  return (\n    <div>\n      <div>Chain Id: {chainId}</div>\n      <div>Account: {account}</div>\n      {active ? (\n        <div style={{color: \"green\"}}>Connected!</div>\n      ) : (\n        <button onClick={onClick}>connect</button>\n      )}\n      <CountGet />\n      <CounterInc />\n      <CounterDec />\n    </div>\n    \n  );\n}\n\nexport default App;","import { Web3Provider } from \"@ethersproject/providers\";\r\n\r\nfunction getLibrary(provider){\r\n    const library = new Web3Provider(provider);\r\n    return library;\r\n}\r\n\r\nexport default getLibrary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Web3ReactProvider} from \"@web3-react/core\";\nimport getLibrary from \"./library\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary = {getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}